{"version":3,"file":"static/js/290.7b67b5a7.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 5rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 25px;\r\n  line-height: 2rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col, Dropdown } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n                        icon,\r\n                        title,\r\n                        content,\r\n                        section,\r\n                        button,\r\n                        t,\r\n                        id,\r\n                        direction,\r\n                      }: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  let history = useHistory();\r\n\r\n  return (\r\n      <ContentSection>\r\n        <Fade direction={direction} triggerOnce>\r\n          <StyledRow\r\n              justify=\"space-between\"\r\n              align=\"middle\"\r\n              id={id}\r\n              direction={direction}\r\n          >\r\n            <Col lg={11} md={11} sm={12} xs={24}>\r\n              <SvgIcon src={icon} width=\"110%\" height=\"110%\" />\r\n            </Col>\r\n            <Col lg={11} md={11} sm={11} xs={24}>\r\n              <ContentWrapper>\r\n                <h6>{t(title)}</h6>\r\n                <Content>{t(content)}</Content>\r\n                {direction === \"right\" ? (\r\n                    <ButtonWrapper>\r\n                      {typeof button === \"object\" &&\r\n                          button.map(\r\n                              (\r\n                                  item: {\r\n                                    scrollTo?: string | any;\r\n                                    color?: string;\r\n                                    title: string;\r\n                                    path?: string;\r\n                                  },\r\n                                  id: number\r\n                              ) => {\r\n                                return (\r\n                                    <Button\r\n                                        key={id}\r\n                                        color={item.color}\r\n                                        onClick={() => item.path ? history.push(item.path) : scrollTo(item.scrollTo || \"about\")}\r\n                                    >\r\n                                      {t(item.title)}\r\n                                    </Button>\r\n\r\n                                );\r\n                              }\r\n                          )}\r\n                    </ButtonWrapper>\r\n                ) : (\r\n                    <ServiceWrapper>\r\n                      <Row justify=\"space-between\">\r\n                        {typeof section === \"object\" &&\r\n                            section.map(\r\n                                (\r\n                                    item: {\r\n                                      title: string;\r\n                                      content: string;\r\n                                      icon: string;\r\n                                    },\r\n                                    id: number\r\n                                ) => {\r\n                                  return (\r\n                                      <Col key={id} span={11}>\r\n                                        <SvgIcon\r\n                                            src={item.icon}\r\n                                            width=\"150px\"\r\n                                            height=\"150px\"\r\n                                        />\r\n                                        <MinTitle>{t(item.title)}</MinTitle>\r\n                                        <MinPara>{t(item.content)}</MinPara>\r\n                                      </Col>\r\n                                  );\r\n                                }\r\n                            )}\r\n                      </Row>\r\n                    </ServiceWrapper>\r\n                )}\r\n              </ContentWrapper>\r\n            </Col>\r\n          </StyledRow>\r\n        </Fade>\r\n      </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","t","id","history","useHistory","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","Button","color","onClick","path","push","document","getElementById","scrollIntoView","behavior","scrollTo","span"],"sourceRoot":""}